filter {
  if [@metadata][stage] == 'bro_category' {

    if [event][dataset] in ["pe", "x509", "file"] {

      if [@metadata][ENABLE_BRO_FILES] == "false" {
        # Configuration has disabled bro files events
        drop { }
      }

      mutate {
        rename => {
          "[pe][id]"    => "[event][id]"
          "[x509][id]"  => "[event][id]"
          "[file][fuid]" => "[event][id]"
        }
        merge => {
          "[related][id]" => "[event][id]"
        }
      } # mutate

      if [file] {
        mutate {
          rename => {
            "[file][is_orig]" => "[file][is_originating]"
            "[file][local_orig]" => "[file][local_origin]"
            "[file][rx_hosts]" => "[file][receiving_hosts]"
            "[file][tx_hosts]" => "[file][transmitting_hosts]"
            "[file][conn_uids]" => "[file][network][ids]"
            "[file][timedout]" => "[file][timed_out]"
          }
        }

        mutate { merge => { "[related][hash]" => "[file][md5]" }}
        mutate { merge => { "[related][hash]" => "[file][sha1]" }}
        mutate { merge => { "[related][hash]" => "[file][sha256]" }}
        mutate { merge => { "[related][hash]" => "[file][sha512]" }}

        mutate { merge => { "[related][ip]" => "[file][receiving_hosts]" }}
        mutate { merge => { "[related][ip]" => "[file][transmitting_hosts]" }}
        mutate { merge => { "[related][id]" => "[file][network][ids]" }}

      }

      if [x509] {
        #Parse domain names & IPs x509 SANs
        ruby {
          init => "
            require 'logstash/event'
            require 'set'

            IPV4_REGEX = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
            IPV6_REGEX = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/
            DNS_REGEX = /^(\*\.)?((?=[a-z0-9-]{1,63}\.)(xn--)?[a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,63}\.?$/
          "
          code => "
            san_dns = Set.new( event.get('[x509][san_dns]'))
            san_ip = Set.new( event.get('[x509][san_ip]'))
            related_ip = Set.new( event.get('[related][ip]'))
            related_hostname = Set.new( event.get('[related][hostname]'))

            san_ip.each do |entry|
              if (entry =~ IPV4_REGEX) || (entry =~ IPV6_REGEX)
                related_ip.add(entry)
              end
            end
            san_dns.each do |entry|
              if (entry =~ IPV4_REGEX) || (entry =~ IPV6_REGEX)
                related_ip.add(entry)
              elsif (entry =~ DNS_REGEX)
                # Trim off the wildcard
                if entry[0..1] == '*.'
                  related_hostname.add(entry[2..-1])
                else
                  related_hostname.add(entry)
                end
              end
            end

            if related_ip.size() > 0
              event.set( '[related][ip]', related_ip.to_a )
            end
            if related_hostname.size() > 0
              event.set( '[related][hostname]', related_hostname.to_a )
            end
          "
        }
      }

      mutate {
        add_field => { "[event][category]"   => "file"}
        replace   => { "[@metadata][stage]" => "bro_file"}
      } # mutate
    }
  }
}
