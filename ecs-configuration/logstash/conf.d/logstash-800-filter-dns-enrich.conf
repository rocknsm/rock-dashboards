filter {

  if [dns][question][name] {
    # if [dns][qtype] == 1 (A) or 28 (AAAA), split out answers to hostnames & ips
    ruby {
      path => "/etc/logstash/ruby/logstash-ruby-filter-dns-related.rb"
      script_params => {
        "query_field" => "[dns][question][name]"
        "query_type_field" => "[dns][question][type]"
        "answers_field" => "[dns][answers][name]"
      }
      tag_on_exception =>  "_rubyexception-all-dns_related_enrichment"
    }
  }

  # Add some additional data and parsing/normilzation for dns response/answer
  if [dns][answers][name] {

      # Hash DNS Response/Answer for easier/more efficient whitelisting/etc
      fingerprint {
          source => [ "[dns][answers][name]" ]
          method => "SHA1"
          target => "[meta][dns][answers][hash][sha1]"
      }

      ruby {
        code => "
          response = event.get('[dns][answers][name]')

          # Is an array
          if response.is_a? Enumerable
              # The total number of responses
              total_responses = response.length
              # The total length of all responses/answers combined if array
              total_length = response.join('').length
              # Remove duplicate responses, so no need to itterate if same things
              response = response.uniq

              all_response_has_non_ascii = Array.new
              all_response_has_whitespace = Array.new
              all_response_length = Array.new

              for r in response
                  all_response_has_non_ascii.push(false === r.ascii_only?)
                  all_response_has_whitespace.push(r.match?(/\s/))
                  all_response_length.push(r.length)
              end

              all_response_length = all_response_length.uniq

              all_response_has_non_ascii = all_response_has_non_ascii.include?(true)
              all_response_has_whitespace = all_response_has_whitespace.include?(true)

              #event.set('dns_response', response)
              event.set('[dns][meta][answers][length]', all_response_length)

          # Not an array
          else
              # The total number of responses
              total_responses = 1
              # The total length the response
              total_length = response.length
              all_response_has_non_ascii = false === response.ascii_only?
              all_response_has_whitespace = response.match?(/\s/)
          end

          # Set variables that are in both array or non array
          event.set('[dns][meta][answers][has_non_ascii]', all_response_has_non_ascii)
          event.set('[dns][meta][answers][total_length]', total_length)
          event.set('[dns][answers_count]', total_responses)
      "
      tag_on_exception =>  "_rubyexception-all-dns_answers_enrichment"
    }

  }
}