filter {
  if [@metadata][stage] in [ "zeek_network", "zeek_file", "zeek_netcontrol", "zeek_detection", "zeek_obervations", "zeek_miscellaneous", "zeek_diagnostic", "zeek_observations" ] {
    # This is really just a hook to catch zeek events before they go to generic
    # ECS enrichment
    mutate {
      replace => { "[@metadata][stage]" => "ecs_needs_enriched" }
      # match with ECS "event.dataset", example "zeek.connection"
      #update => { "[event][dataset]" => "zeek.%{[event][dataset]}" }
    }

    # Duration is always float (milliseconds) in any of the log types, therefore apply millisecond to nanosecond for event duration if it exists
#    if [event][duration] {
#      ruby {
#        code => "
#          event_duration = event.get('[event][duration]')
#          event.set('[event][duration]', event_duration * 1000000)
#        "
#        tag_on_exception => "_rubyexception-zeek-all-duration_to_nanoseconds"
#      }
#    }

  }
}
