filter {
    #### Base SIEM Field fixes/hacks for things like only work with packetbeat or aliases don't work for some things but work for others ####


    # Source.IP - fix field populate - Alias' don't work,
    if [client][ip] {
        mutate { copy => { "[client]" => "[source]" } }
        # forward not using autonomous, and will be "as" instead, however keep/copy to support current implementation in SIEM
        # it uses some form of just only "autonoumous_system" not name and or number? https://github.com/elastic/kibana/blob/33c237e187156777f1344b49c4b8445658ade224/x-pack/legacy/plugins/siem/server/lib/ip_details/query_overview.dsl.ts#L28
        # as of 2019-07-07 05:01am (EST) even when all the following below are uncommented, can't get the field to populate in ip overview tab...
        #if [source][as] {
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[source][autonomous_system][asn]"
        #            "[source][as][organization][name]" => "[source][autonomous_system][as_org]"
        #            "[source][as][ip]" => "[source][autonomous_system][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[source][autonomous_system][number]"
        #            "[source][as][organization][name]" => "[source][autonomous_system][organization][name]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[source][autonomousSystem][asn]"
        #            "[source][as][organization][name]" => "[source][autonomousSystem][as_org]"
        #            "[source][as][ip]" => "[source][autonomousSystem][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[autonomousSystem][asn]"
        #            "[source][as][organization][name]" => "[autonomousSystem][as_org]"
        #            "[source][as][ip]" => "[autonomousSystem][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[autonomous_system][asn]"
        #            "[source][as][organization][name]" => "[autonomous_system][as_org]"
        #            "[source][as][ip]" => "[autonomous_system][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[source][geo][asn]"
        #            "[source][as][organization][name]" => "[source][geo][as_org]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[source][as][asn]"
        #            "[source][as][organization][name]" => "[source][as][as_org]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[source][as][number]" => "[source][as][num]"
        #            "[source][as][organization][name]" => "[source][as][org]"
        #        }
        #    }
        #}
    }

    # Destination.IP - fix field populate - Alias' don't work,
    if [server][ip] {
        mutate { copy => { "[server]" => "[destination]" } }
        # forward not using autonomous, and will be "as" instead, however keep/copy to support current implementation in SIEM
        # it uses some form of just only "autonoumous_system" not name and or number? https://github.com/elastic/kibana/blob/33c237e187156777f1344b49c4b8445658ade224/x-pack/legacy/plugins/siem/server/lib/ip_details/query_overview.dsl.ts#L28
        # as of 2019-07-07 05:01am (EST) even when all the following below are uncommented, can't get the field to populate in ip overview tab...
        #if [destination][as] {
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[destination][autonomous_system][asn]"
        #            "[destination][as][organization][name]" => "[destination][autonomous_system][as_org]"
        #            "[destination][as][ip]" => "[destination][autonomous_system][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[destination][autonomous_system][number]"
        #            "[destination][as][organization][name]" => "[destination][autonomous_system][organization][name]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[destination][autonomousSystem][asn]"
        #            "[destination][as][organization][name]" => "[destination][autonomousSystem][as_org]"
        #            "[destination][as][ip]" => "[destination][autonomousSystem][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[autonomousSystem][asn]"
        #            "[destination][as][organization][name]" => "[autonomousSystem][as_org]"
        #            "[destination][as][ip]" => "[autonomousSystem][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[autonomous_system][asn]"
        #            "[destination][as][organization][name]" => "[autonomous_system][as_org]"
        #            "[destination][as][ip]" => "[autonomous_system][ip]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[destination][geo][asn]"
        #            "[destination][as][organization][name]" => "[destination][geo][as_org]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[destination][as][asn]"
        #            "[destination][as][organization][name]" => "[destination][as][as_org]"
        #        }
        #    }
        #    mutate {
        #        copy => {
        #            "[destination][as][number]" => "[destination][as][num]"
        #            "[destination][as][organization][name]" => "[destination][as][org]"
        #        }
        #    }
        #}
    }

    # Copy destination domain after Destination.IP alias fix, otherwise destination gets overwritten and thus would this field
    if [@metadata][destination_domain] {
        mutate { copy => { "[@metadata][destination_domain]" => "[destination][domain]" } }
    }

    # Overview tab - populate total event count - uses service.type
    if [event][module] == "zeek" {
        mutate { add_field => { "[service][type]" =>  "%{[event][module]}" } }
    }

    # TLS/SSL drill down - fix essentially the entirety of it, otherwise only works with packetbeat regardless of how (even filebeat with elastic ingest/process)
    if [ssl] {
        mutate { copy => { "[ssl]" =>  "[tls]" } }
        mutate {
            # ja3s hash currently not used, but maybe this will be future "proof"
            rename => {
                "[tls][ja3]" => "[tls][fingerprints][ja3][hash]"
                "[tls][ja3s]" => "[tls][fingerprints][ja3s][hash]"
                "[tls][client_issuer]" => "[tls][client_certificate][issuer][common_name]"
                "[tls][client_sha1]" => "[tls][client_certificate][fingerprint][sha1]"
                "[tls][client_subject]" => "[tls][client_certificate][subject][common_name]"
                "[tls][server_issuer]" => "[tls][server_certificate][issuer][common_name]"
                "[tls][server_sha1]" => "[tls][server_certificate][fingerprint][sha1]"
                "[tls][server_subject]" => "[tls][server_certificate][subject][common_name]"
            }
        }
        # event.dataset and network.protocol are required for TLS to be available
        mutate {
            update => { "[event][dataset]" =>  "tls" }
            add_field => { "[network][protocol]" =>  "tls" }
        }
        # lastly, fingerprint sha1 is used as cardinality, and zeek/suricata don't have this field - but is added in RockNSM as of 2019-07-10......
        # therefore, check if it exists - otherwise for now "randomize" it just to create it so siem tls stuff works.
        # also, certificates don't really happen in TLS version 1.3 - and we still want to pivot/use the other stuff capture like JA3* hashes and stuff...
        if ![tls][server_certificate][fingerprint][sha1] {
            fingerprint {
                concatenate_sources => "true"
                method => "SHA1"
                source => [
                    "[ssl][ja3s]",
                    "[ssl][server_issuer]",
                    "[ssl][server_name]",
                    "[ssl][server_subject]"
                ]
                target => "[tls][server_certificate][fingerprint][sha1]"
                add_tag => "temporary siem tls fix"
            }
        }
    }

    # DNS/Domain drill down - most/all based on field dns.question.etld_plus_one exisiting. also requires the network.protocol field
    if [dns] {
        mutate {
            add_field => { "[network][protocol]" =>  "dns" }
            copy => { "[domain][1n2_name]" => "[dns][question][etld_plus_one]" }
        }
    }
}