filter {

    # HTTP UserAgent parsing, normalization, and enrichment
    if [user_agent][original] {
        ruby {
            code => "
                http_useragent = event.get('[user_agent][original]')
                event.set('[user_agent][meta][total_length]', http_useragent.length)
            "
            tag_on_exception => "_rubyexception-all-http_user_agent_parsing"
        }

        useragent {
          source => "[user_agent][original]"
          target => "user_agent"
          # Add field if successful for checking later
          add_field => { "[@metadata][ua_parse]" => "true" }
        }

        # UA to new ECS
        if [@metadata][ua_parse] == "true" {
          mutate {
            rename => {
              "[user_agent][os]" => "[user_agent][os][full]"
              "[user_agent][os_major]" => "[user_agent][os][major]"
              "[user_agent][os_minor]" => "[user_agent][os][minor]"
              "[user_agent][os_name]" => "[user_agent][os][name]"
              "[user_agent][device]" => "[user_agent][device][name]"
            }
            copy => {
              "[user_agent][patch]" => "[user_agent][os][minor2]"
            }
          }
        }

    }

}